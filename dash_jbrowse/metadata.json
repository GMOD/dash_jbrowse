{
  "src/lib/components/CircularGenomeView.tsx": {
    "displayName": "CircularGenomeView",
    "description": "CircularGenomeView renders the JBrowse 2 React Circular Genome View.\nAny JB2 CGV configuration is also valid configuration for this\ncomponent.",
    "props": {
      "assembly": {
        "description": "",
        "required": true,
        "type": {
          "name": "any",
          "raw": "ModelCreationType<ExtractCFromProps<Record<string, any>>> | undefined"
        }
      },
      "tracks": {
        "description": "",
        "required": true,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "internetAccounts": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "aggregateTextSearchAdapters": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "configuration": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "Record<string, unknown> | undefined"
        }
      },
      "plugins": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "PluginConstructor[] | undefined"
        }
      },
      "makeWorkerInstance": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "() => Worker"
            }
          ],
          "raw": "(() => Worker) | undefined"
        }
      },
      "hydrateFn": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(container: Element | Document, initialChildren: ReactNode) => any"
            }
          ],
          "raw": "((container: Element | Document, initialChildren: ReactNode) => any) | undefined"
        }
      },
      "createRootFn": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(elt: Element | DocumentFragment) => { render: (node: ReactElement<any, string | JSXElementConstructor<any>>) => unknown; }"
            }
          ],
          "raw": "((elt: Element | DocumentFragment) => { render: (node: ReactElement<any, string | JSXElementConstructor<any>>) => unknown; }) | undefined"
        }
      },
      "defaultSession": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "ModelCreationType<ExtractCFromProps<{ id: IOptionalIType<ISimpleType<string>, [undefined]>; name: ISimpleType<string>; margin: IType<number | undefined, number, number>; } & { ...; } & { ...; } & { ...; }>> | undefined"
        }
      },
      "onChange": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(patch: IJsonPatch, reversePatch: IJsonPatch) => void"
            }
          ],
          "raw": "((patch: IJsonPatch, reversePatch: IJsonPatch) => void) | undefined"
        }
      },
      "id": {
        "description": "",
        "required": true,
        "type": {
          "name": "string",
          "raw": "string"
        }
      }
    },
    "isContext": false
  },
  "src/lib/components/LinearGenomeView.tsx": {
    "displayName": "LinearGenomeView",
    "description": "",
    "props": {
      "assembly": {
        "description": "",
        "required": true,
        "type": {
          "name": "any",
          "raw": "any"
        }
      },
      "tracks": {
        "description": "",
        "required": true,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "internetAccounts": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "aggregateTextSearchAdapters": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "any",
                "raw": "any"
              },
              "raw": "readonly any[]"
            }
          ],
          "raw": "readonly any[] | undefined"
        }
      },
      "configuration": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "Record<string, unknown> | undefined"
        }
      },
      "plugins": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "PluginConstructor[] | undefined"
        }
      },
      "location": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string",
              "raw": "string"
            }
          ],
          "raw": "string | Location | undefined"
        }
      },
      "defaultSession": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "ModelCreationType<ExtractCFromProps<{ id: IOptionalIType<ISimpleType<string>, [undefined]>; name: ISimpleType<string>; margin: IType<number | undefined, number, number>; } & { ...; } & { ...; } & { ...; } & { ...; }>> | undefined"
        }
      },
      "disableAddTracks": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "boolean | undefined"
        }
      },
      "onChange": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(patch: IJsonPatch, reversePatch: IJsonPatch) => void"
            }
          ],
          "raw": "((patch: IJsonPatch, reversePatch: IJsonPatch) => void) | undefined"
        }
      },
      "makeWorkerInstance": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "() => Worker"
            }
          ],
          "raw": "(() => Worker) | undefined"
        }
      },
      "hydrateFn": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(container: Element | Document, initialChildren: ReactNode) => any"
            }
          ],
          "raw": "((container: Element | Document, initialChildren: ReactNode) => any) | undefined"
        }
      },
      "createRootFn": {
        "description": "",
        "required": false,
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func",
              "raw": "(elt: Element | DocumentFragment) => { render: (node: ReactElement<any, string | JSXElementConstructor<any>>) => unknown; }"
            }
          ],
          "raw": "((elt: Element | DocumentFragment) => { render: (node: ReactElement<any, string | JSXElementConstructor<any>>) => unknown; }) | undefined"
        }
      },
      "id": {
        "description": "",
        "required": true,
        "type": {
          "name": "string",
          "raw": "string"
        }
      }
    },
    "isContext": false
  }
}